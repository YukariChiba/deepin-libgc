Origin: uniontech
Author: zhangfeilong@uniontech.com
Last-Update: 2021-04-15

--- libgc-7.6.4.orig/Makefile.direct	2019-03-02 16:54:41.000000000 +0800
+++ libgc-7.6.4/Makefile.direct	2022-04-07 17:07:48.133296952 +0800
@@ -350,6 +350,7 @@
 	./if_mach POWERPC DARWIN $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a
 	./if_mach I386 LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`
 	./if_mach ALPHA LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`
+	./if_mach SW_64 LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`
 	./if_mach IA64 LINUX $(CC) $(CFLAGS) -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses `./threadlibs`
 	./if_mach M68K AMIGA $(CC) $(CFLAGS) -UGC_AMIGA_MAKINGLIB -o cord/de $(srcdir)/cord/tests/de.c cord/cordbscs.o cord/cordxtra.o gc.a -lcurses
 	./if_not_there cord/de$(EXEEXT) || $(CC) $(CFLAGS) -o cord/de$(EXEEXT) $(srcdir)/cord/tests/de.c $(srcdir)/cord/tests/de_win.c cord/cordbscs.o cord/cordxtra.o gc.a $(CURSES) `./threadlibs`
--- libgc-7.6.4.orig/include/gc_tiny_fl.h
+++ libgc-7.6.4/include/gc_tiny_fl.h
@@ -49,7 +49,7 @@
 # if defined(__LP64__) || defined (_LP64) || defined(_WIN64) \
         || defined(__s390x__) \
         || (defined(__x86_64__) && !defined(__ILP32__)) \
-        || defined(__alpha__) || defined(__powerpc64__) \
+        || defined(__alpha__) || defined(__sw_64__) || defined(__powerpc64__) \
         || defined(__arch64__)
 #  define GC_GRANULE_BYTES 16
 #  define GC_GRANULE_WORDS 2
--- libgc-7.6.4.orig/include/private/gcconfig.h
+++ libgc-7.6.4/include/private/gcconfig.h
@@ -356,6 +356,10 @@
 #   endif
 #   define mach_type_known
 # endif
+# if defined(__sw_64) || defined(__sw_64__)
+#   define SW_64
+#   define mach_type_known
+# endif
 # if defined(_AMIGA) && !defined(AMIGA)
 #   define AMIGA
 # endif
@@ -632,6 +636,8 @@
                     /*                  (SOLARIS, LINUX, DRSNX variants)        */
                     /*             ALPHA      ==> DEC Alpha             */
                     /*                  (OSF1 and LINUX variants)       */
+                    /*             SW_64      ==> SUNWAY                */
+                    /*                  (LINUX variants)                */
                     /*             M88K       ==> Motorola 88XX0        */
                     /*                  (CX_UX and DGUX)                */
                     /*             S370       ==> 370-like machine      */
@@ -1872,6 +1878,27 @@
 #  endif
 # endif /* HP_PA */
 
+# ifdef SW_64
+#   define MACH_TYPE "SW_64"
+#   define ALIGNMENT 8
+#   define CPP_WORDSZ 64
+#   ifdef LINUX
+#       define OS_TYPE "LINUX"
+#       define LINUX_STACKBOTTOM
+#       ifdef __ELF__
+#         define SEARCH_FOR_DATA_START
+#         define DYNAMIC_LOADING
+#       else
+#           define DATASTART ((ptr_t)0x140000000)
+#       endif
+        extern int _end[];
+#       define DATAEND ((ptr_t)(_end))
+#       define MPROTECT_VDB
+                /* Has only been superficially tested.  May not */
+                /* work on all versions.                        */
+#   endif
+# endif
+
 # ifdef ALPHA
 #   define MACH_TYPE "ALPHA"
 #   define ALIGNMENT 8
